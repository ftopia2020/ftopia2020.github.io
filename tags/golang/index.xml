<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Ftopia</title>
    <link>https://ftopia2020.github.io/tags/golang/</link>
    <description>Recent content in golang on Ftopia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ftopia2020.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gopher China 2020 大会（PPT 传送门）</title>
      <link>https://ftopia2020.github.io/2020/gopherchina2020/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2020/gopherchina2020/</guid>
      <description>Gopher China 2020 大会 PPT 2020 传送门： https://github.com/gopherchina/conference/tree/master/2020 历届：https://github.com/gopherchina/conference Gopher China 大会官网：https:/</description>
    </item>
    
    <item>
      <title>【转】容器化Go应用--基础镜像的未知时区问题</title>
      <link>https://ftopia2020.github.io/2020/godockertimezone/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2020/godockertimezone/</guid>
      <description>作者：kevinyan 链接： https://juejin.im/post/5f1282e46fb9a07e976bf1ae 用Go开发的应用程序的一个优势在于，可以从&amp;quot;零&amp;quot;开始构建应用的Docker镜像，镜像中仅需</description>
    </item>
    
    <item>
      <title>golang 多版本管理工具 —— gvm</title>
      <link>https://ftopia2020.github.io/2020/gvm/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2020/gvm/</guid>
      <description>WHY 早期，Golang 版本及包管理令人痛苦。1.11 之后 go mod 的出现支持了包管理，但不同项目下若要求不同的 Golang 版本，我们如何处理？ WHAT GVM - Go Version Man</description>
    </item>
    
    <item>
      <title>解决 go get 下载包失败的问题</title>
      <link>https://ftopia2020.github.io/2019/goget/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2019/goget/</guid>
      <description>What 在使用 go get, go mod 等命令时，会自动下载相应的包或依赖包。但由于被墙，如 golang.org/x/... 的包会出现下载失败的情况。嗯 &amp;hellip; timeout How 手动下载 常见包如 golang.org/x/... 的包，通常在 github 上都</description>
    </item>
    
    <item>
      <title>Golang 使用 go-yaml 解析 YAML 文件</title>
      <link>https://ftopia2020.github.io/2019/golanggoyaml/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2019/golanggoyaml/</guid>
      <description>Why 在项目中，难免会用到配置文件，而 YAML 格式的配置文件较 xml、json 等有其特有的优势，目前比较流行，那我们用 Golang 如何来解析 YAML 文件呢？ What YAML YAML 是 &amp;ldquo;YAML</description>
    </item>
    
    <item>
      <title>Golang 使用 string.split 切割字符串并返回数组</title>
      <link>https://ftopia2020.github.io/2019/golangstringsplit/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2019/golangstringsplit/</guid>
      <description>Why 在很多业务需求或数据处理中，我们需要将某一字符串根据某分隔符一一隔开并置于数组中，像是已知 Id 字符串 3,7,123 ，需要将 3、7、123 存入数组。在 golang 中</description>
    </item>
    
    <item>
      <title>Golang 实现定时任务</title>
      <link>https://ftopia2020.github.io/2019/golangcron/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ftopia2020.github.io/2019/golangcron/</guid>
      <description>Why 在应用开发中，经常需要一些周期性的操作，如：在每天凌晨分析前一天的日志、每隔5分钟检查某些业务情况并触发告警等等。这些功能需要使用定时任务</description>
    </item>
    
  </channel>
</rss>